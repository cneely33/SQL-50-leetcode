import pandas as pd
# 2877. Create a DataFrame from List
# Easy

def createDataframe(student_data: List[List[int]]) -> pd.DataFrame:
    return pd.DataFrame(student_data,
            columns=['student_id', 'age'])

# 2878. Get the Size of a DataFrame
# Easy
    
def getDataframeSize(players: pd.DataFrame) -> List[int]:
    return list(players.shape)

# 2879. Display the First Three Rows
# Easy

def selectFirstRows(employees: pd.DataFrame) -> pd.DataFrame:
    return employees.head(3)

# 2880. Select Data
# Easy
def selectData(students: pd.DataFrame) -> pd.DataFrame:
    students = students[students['student_id'] == 101]
    return students[['name', 'age']]

# 2881. Create a New Column
# Easy
    
def createBonusColumn(employees: pd.DataFrame) -> pd.DataFrame:
    employees['bonus'] = employees['salary'] * 2
    return employees

# 2882. Drop Duplicate Rows
# Easy

def dropDuplicateEmails(customers: pd.DataFrame) -> pd.DataFrame:
    customers.drop_duplicates(inplace=True, subset=['email'], keep='first')
    return customers

# 2883. Drop Missing Data
# Easy

def dropMissingData(students: pd.DataFrame) -> pd.DataFrame:
    return students.dropna(subset=['name'])

# 2884. Modify Columns
# Easy

def modifySalaryColumn(employees: pd.DataFrame) -> pd.DataFrame:
    employees['salary'] = employees['salary'].apply(lambda x : x*2)
    return employees

# 2885. Rename Columns
# Easy

def renameColumns(students: pd.DataFrame) -> pd.DataFrame:
    new_names = {
        'id': 'student_id',
        'first': 'first_name',
        'last': 'last_name',
        'age': 'age_in_years'
            }
    return students.rename(columns=new_names)

# 2886. Change Data Type
# Easy

def changeDatatype(students: pd.DataFrame) -> pd.DataFrame:
    students['grade'] = students['grade'].astype(int)
    return students

# 2887. Fill Missing Data
# Easy

def fillMissingValues(products: pd.DataFrame) -> pd.DataFrame:
    products['quantity'].fillna(0, inplace=True)
    return products

# 2888. Reshape Data: Concatenate
# Easy

def concatenateTables(df1: pd.DataFrame, df2: pd.DataFrame) -> pd.DataFrame:
    return pd.concat([df1, df2])

# 2889. Reshape Data: Pivot
# Easy

def pivotTable(weather: pd.DataFrame) -> pd.DataFrame:
    return weather.pivot(index='month',
                            columns='city',
                            values='temperature')

# 2890. Reshape Data: Melt
# Easy
    
def meltTable(report: pd.DataFrame) -> pd.DataFrame:
    return pd.melt(report,
                id_vars='product',
                value_vars=['quarter_1',
                        'quarter_2',
                        'quarter_3',
                        'quarter_4',
                        ],
                var_name='quarter',
                value_name='sales')

# 2891. Method Chaining
# Easy

def findHeavyAnimals(animals: pd.DataFrame) -> pd.DataFrame:
    animals = animals[animals['weight'] > 100]
    animals.sort_values(by='weight', ascending=False, inplace=True)
    return pd.DataFrame(animals['name'])

